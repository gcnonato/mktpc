<?phpclass Bootstrap extends JO_Application_Bootstrap_Bootstrap {		public function _initInstall() {		$request = JO_Request::getInstance();		if( (!JO_Registry::forceGet('config_db') || !is_array(JO_Registry::forceGet('config_db')) ) && $request->getModule() != 'install' ) {			JO_Action::getInstance()->redirect($request->getBaseUrl() . '?module=install');		}	}		public function _initVersion() {		JO_Registry::set('system_version', '2.1');	}		public function _initSetRoute() {		$request = JO_Request::getInstance();		$request->setParams('_route_', trim($request->getUri(), '/'));		if(isset($_GET) && is_array($_GET)) {			$request->setParams($_GET);		}		//		$domain = $request->getDomain();//		$modules = WM_Modules::getList();//		if($modules) {//			if(preg_match('/^('.implode('|',$modules).').(.*)/i',$domain, $match)) {//				$request->setModule($match[1]);//				$request->setHost($match[2]);//			}//		}	}		public function _initConfigAllowControllers() {		$controllers = WM_Modules::getConfig();		$allowed = array();		foreach($controllers AS $k=>$v) {			if(isset($v['controllers']) && is_array($v['controllers'])) {				$allowed = array_merge($allowed, $v['controllers']);				}		}		return $allowed;	}		public function _initStoreSettings() {				$request = JO_Request::getInstance();				if($request->getModule() == 'install') {			return'';		}		$store = new WM_Store;		$store_settings = $store->getStoreSettings();		if($store_settings) {			foreach($store_settings AS $value) {				if($value['serialize']) {					JO_Registry::set($value['key'], self::mb_unserialize($value['value']));				} else {					JO_Registry::set($value['key'], $value['value']);				}			}		}				if(!JO_Registry::get('admin_limit')) {			JO_Registry::set('admin_limit', 15);		}				if(!JO_Registry::get('front_limit')) {			JO_Registry::set('front_limit', 10);		}				if(!JO_Session::get('user_id')) {			JO_Session::set('user_id', 0);		}				if($request->getModule() == 'default' && JO_Registry::get('default_module')) {			$request->setModule(JO_Registry::get('default_module'));						$modules = WM_Modules::getList();			if($modules) { 				rsort($modules);				$router = JO_Router::getInstance();				$router->addRoute('default', new JO_Router_Regex(					'('.implode('|',$modules).')/?(\w+)?/?(\w+)?/?',					array('module' => JO_Registry::get('default_module'), 'controller' => 'index','action' => 'index'),					array(1 => 'module', 2 => 'controller',3 => 'action')				));				$matched = $router->match($request->getRequest('uri'), true);				if($matched) {					foreach($matched AS $key=>$value) {						$request->setParams($key, $value);					}				}			}		} 		//		$default_domains = JO_Registry::get('default_domain');//		if($default_domains && is_array($default_domains) && count($default_domains) > 1) {//			$search = array_search($request->getDomain(), $default_domains);//			if($search != $request->getModule()) {//				$request->setModule($search);//			}//		}						JO_Registry::set('default_config_language_id', JO_Registry::get('config_language_id'));	}		public function _initLocale() {				$request = JO_Request::getInstance();				if($request->getModule() == 'install') {			return'';		}				$locale_get = JO_Locale::findLocale();		$loc = new WM_Locale;		$languages = $loc->getLanguages();				$detect = '';		$languages_tmp = array();		foreach($languages AS $language) {//			$lang = explode(',', $language['locale']);//			if(in_array($locale_get, $lang)) {//				$detect = $language['language_id'];//			}			$languages_tmp[$language['language_id']] = $language;		}						$code = '';		if($request->getRequest('language_id') && array_key_exists($request->getRequest('language_id'), $languages_tmp)) {			$code = $request->getRequest('language_id');		} elseif(JO_Session::get('language_id') && array_key_exists(JO_Session::get('language_id'), $languages_tmp)) {			$code = JO_Session::get('language_id');		} elseif($request->getCookie('language_id') && array_key_exists($request->getCookie('language_id'), $languages_tmp)) {			$code = $request->getCookie('language_id');		} elseif($detect) {			$code = $detect;		} elseif(JO_Registry::isRegistered('config_language_id')) {			$code = JO_Registry::get('config_language_id');		}		//		if($request->getModule() == 'admin') {//			$code = JO_Registry::get('config_language_id');//		} 				if(!$code) {			throw new JO_Exception("No default language found");		}				if(JO_Session::get('language_id') != $code) {			JO_Session::set('language_id', $code);		}		if($request->getCookie('language_id') != $code) {			setcookie('language_id', $code, time() + 60 * 60 * 24 * 30, '/', '.' . $request->getDomain());		}				if(isset($languages_tmp[$code])) {			JO_Registry::set('config_language_id', $languages_tmp[$code]['language_id']);			JO_Registry::set('config_language', $languages_tmp[$code]['code']);						JO_Registry::set('JO_Locale', new JO_Locale($languages_tmp[$code]['locale_territory']));			setlocale(LC_TIME, $languages_tmp[$code]['locale_territory'] . '.utf-8');		}	}		public function _initUserSession() {				$request = JO_Request::getInstance();				if($request->getModule() == 'install') {			return'';		}		WM_Users::initSession(JO_Session::get('user_id'));	}	//	public function _initLocale() {//		//		if(JO_Registry::get('locale_territory')) {//			JO_Registry::set('JO_Locale', new JO_Locale(JO_Registry::get('locale_territory')));//			setlocale(LC_TIME, JO_Locale::findLocale() . '.utf-8');//		}		//	}		public function _initRoute() {//		$request = JO_Request::getInstance();//		$uri = $request->getUri();//		if($uri && $request->getModule() != 'admin') {//			WM_Router::routeModules($uri);//		}		// var_dump(JO_Request::getInstance()->getParams());exit;			}		public function _initLoginCheckAdmin() {				$request = JO_Request::getInstance();				if($request->getModule() == 'install') {			return'';		}		$request = JO_Request::getInstance(); 		if($request->getModule() == 'admin' 				AND ($request->getController() != 'login' 				OR $request->getAction() != 'index') 				AND !JO_Session::get('is_admin')) {			JO_Action::getInstance()->forward('login', 'index');		}	}		public function _initTranslate() {				$request = JO_Request::getInstance();				if($request->getModule() == 'install') {			return'';		}		$translate = new WM_Gettranslate();		JO_Registry::set('JO_Translate', WM_Translate::getInstance(array('data' => $translate->getTranslate())));	}		public function _initAdminMenuPermisions() { 				$request = JO_Request::getInstance();				if($request->getModule() == 'install') {			return'';		}//		var_dump(JO_Session::get('access'));		$request = JO_Request::getInstance();		if($request->getModule() == 'admin' && JO_Session::get('is_admin')) {			$files = glob(APPLICATION_PATH . '/modules/' . $request->getModule() . '/controllers/*.php');			$temporary_for_menu = array();			$temporary_for_permision = array();			$sort_order = $sort_order2 = array();			if($files) {				foreach($files AS $d => $file) {					$name = basename($file, '.php');					JO_Loader::loadFile($file);					if(method_exists($name, 'config')) {						$data = call_user_func(array($name, 'config'));												if(!$data['has_permision']) { continue; }						if(isset($data['is_singlesignon']) && $data['is_singlesignon'] == true) continue;						$temporary_for_permision[$data['permision_key']][] = array(							'name' => $data['name'],							'key' => $data['permision_key'],							'has_permision' => $data['has_permision'],							'menu' => $data['menu']						);												if(!$data['in_menu']) { continue; } 						if(!in_array($data['permision_key'], (array)JO_Session::get('access'))) {							continue;						}												if(isset($sort_order2[$data['menu']])) {							$sort_order2[$data['menu']] = min($sort_order[$data['menu']],(int)(isset($data['sort_order']) ? $data['sort_order'] : 0));						} else {							$sort_order2[$data['menu']] = (int)(isset($data['sort_order']) ? $data['sort_order'] : 0);						} 												$sort_order[$data['menu']][$d] = (int)(isset($data['sort_order']) ? $data['sort_order'] : 0);						$temporary_for_menu[$data['menu']][$d] = array(							'name' => $data['name'],							'key' => $data['permision_key'],							'has_permision' => $data['has_permision'],							'menu' => $data['menu'],							'href' => $request->getBaseUrl() . $request->getModule() . '/' . str_replace('controller','',strtolower($name)) . '/'						);					}				}			}						array_multisort($sort_order2, SORT_ASC, $temporary_for_menu);			foreach($temporary_for_menu AS $k=>$t) {				array_multisort($sort_order[$k], SORT_ASC, $temporary_for_menu[$k]);			}			//			ksort($temporary_for_menu);			ksort($temporary_for_permision);						JO_Registry::set('temporary_for_permision', $temporary_for_permision);			return $temporary_for_menu;		}	}		public function _initNoPermision() {				$request = JO_Request::getInstance();				if($request->getModule() == 'install') {			return'';		}		if($request->getModule() == 'admin') {			$controller_name = JO_Front::getInstance()->formatControllerName($request->getController());			if(!class_exists($controller_name, false)) {				JO_Loader::loadFile(APPLICATION_PATH . '/modules/' . $request->getModule() . '/controllers/' . JO_Front::getInstance()->classToFilename($controller_name));			}			if(method_exists($controller_name, 'config')) {				$data = call_user_func(array($controller_name, 'config'));				if($data['has_permision'] && !in_array($data['permision_key'], (array)JO_Session::get('access'))) {					JO_Action::getInstance()->forward('error', 'noPermission');				}			}		}	}	public function _initLicense() {				$request = JO_Request::getInstance();				if($request->getModule() == 'install') {			return'';		}		$license = new WM_License();		if(!$license->isValid()) {			JO_Registry::set('LicenseError', $license->getErrors());			JO_Action::getInstance()->forward('error', 'noLicense');		}			}		public function _initXSS() {//		$request = JO_Request::getInstance();//		if($request->getModule() != 'admin') {			$_POST = self::htmlspecialchars($_POST);			$_GET = self::htmlspecialchars($_GET);			$_REQUEST = self::htmlspecialchars($_REQUEST);			$_COOKIE = self::htmlspecialchars($_COOKIE);//		}	}	public function _initRef() {		$request = JO_Request::getInstance();				if($request->getRequest('ref')) {						$db = JO_Db::getDefaultAdapter();						if(is_null(JO_Cookie::get('referral'))) {								$query = $db->select()							->from('users')							->where('username = ?', $request->getRequest('ref'))							->limit(1,0);											$ref_user = $db->fetchRow($query);								if($ref_user) {					JO_Cookie::set('referral', $ref_user['user_id'], 2628000);					$db->insert('users_referals_count', array(						'user_id' => 0,						'referal_id' => (int)$ref_user['user_id'],						'datetime' => new JO_Db_Expr('NOW()'),						'order_type' => 'gast'					));				} else {					JO_Cookie::delete('referral');				}			} else {				$cookie = JO_Cookie::get('referral');				JO_Cookie::set('referral', $cookie, 2628000);			}		}	}	public function _initRedirect()	{		$request = JO_Request::getInstance();		if($request->issetPost('currency') || $request->issetPost('language_id')) {						if($request->issetPost('currency') && $request->getCookie('currency') != $request->getPost('currency')) {				setcookie('currency', $request->getPost('currency'), time() + 60 * 60 * 24 * 30, '/', $request->getDomain());				JO_Session::set('currency', $request->getPost('currency'));			}						JO_Action::getInstance()->redirect($request->getServer('HTTP_REFERER'));			}	}}?>